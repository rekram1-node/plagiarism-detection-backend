# https://taskfile.dev

version: '3'

vars:
  NAME: 'plagiarism-backend'

tasks:
  clean:
    cmds:
      - go clean

  test:
    desc: "runs unit tests"
    cmds:
      - go test -v ./...

  test:ci:
    desc: "runs unit tests with coverage"
    cmds:
    - go test -cover -v ./...

  build:
    cmds:
      - go build -trimpath -ldflags "{{.BUILD_FLAGS}}" -o {{.NAME}}{{exeExt}} {{.CLI_ARGS}}
    sources:
      - ./**/*.go
    generates:
      - '{{.NAME}}{{exeExt}}'
    method: checksum
    env:
      CGO_ENABLED: 0
      GOOS: '{{default "" .BUILD_OS}}'
      GOARCH: '{{default "" .BUILD_ARCH}}'
    vars:
      BUILD_FLAGS: '{{default "" .BUILD_FLAGS}}'
  
  build:docker:
    desc: "creates docker image with compiled application"
    deps: [ clean, build ]
    cmds:
      - docker build . -t {{.ECR_REGISTRY}}/{{.ECR_REPO_NAME}}:{{.RELEASE_VERSION}} -f Dockerfile

  run:
    deps: [ build ]
    sources:
      - ./**/*
      - ./*
    cmds:
      - ./{{.NAME}}{{exeExt}} {{.CLI_ARGS}}
  
  format:
    cmds:
      - gofmt -s -w .
    sources:
      - ./**/*.go

  lint:
    cmds:
      - cmd: golangci-lint run -v -c ./.golangci.yml
        ignore_error: true
    sources:
      - ./**/*.go
